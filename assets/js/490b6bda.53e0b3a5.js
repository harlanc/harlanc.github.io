"use strict";(self.webpackChunktauri_docs=self.webpackChunktauri_docs||[]).push([[869],{5680:(e,r,t)=>{t.d(r,{xA:()=>i,yg:()=>m});var n=t(6540);function o(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function a(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function s(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?a(Object(t),!0).forEach((function(r){o(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function p(e,r){if(null==e)return{};var t,n,o=function(e,r){if(null==e)return{};var t,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||(o[t]=e[t]);return o}(e,r);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var l=n.createContext({}),c=function(e){var r=n.useContext(l),t=r;return e&&(t="function"==typeof e?e(r):s(s({},r),e)),t},i=function(e){var r=c(e.components);return n.createElement(l.Provider,{value:r},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},y=n.forwardRef((function(e,r){var t=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,i=p(e,["components","mdxType","originalType","parentName"]),u=c(t),y=o,m=u["".concat(l,".").concat(y)]||u[y]||d[y]||a;return t?n.createElement(m,s(s({ref:r},i),{},{components:t})):n.createElement(m,s({ref:r},i))}));function m(e,r){var t=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var a=t.length,s=new Array(a);s[0]=y;var p={};for(var l in r)hasOwnProperty.call(r,l)&&(p[l]=r[l]);p.originalType=e,p[u]="string"==typeof e?e:o,s[1]=p;for(var c=2;c<a;c++)s[c]=t[c];return n.createElement.apply(null,s)}return n.createElement.apply(null,t)}y.displayName="MDXCreateElement"},2817:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>g,contentTitle:()=>f,default:()=>h,frontMatter:()=>m,metadata:()=>v,toc:()=>b});var n=t(5680),o=Object.defineProperty,a=Object.defineProperties,s=Object.getOwnPropertyDescriptors,p=Object.getOwnPropertySymbols,l=Object.prototype.hasOwnProperty,c=Object.prototype.propertyIsEnumerable,i=(e,r,t)=>r in e?o(e,r,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[r]=t,u=(e,r)=>{for(var t in r||(r={}))l.call(r,t)&&i(e,t,r[t]);if(p)for(var t of p(r))c.call(r,t)&&i(e,t,r[t]);return e},d=(e,r)=>a(e,s(r)),y=(e,r)=>{var t={};for(var n in e)l.call(e,n)&&r.indexOf(n)<0&&(t[n]=e[n]);if(null!=e&&p)for(var n of p(e))r.indexOf(n)<0&&c.call(e,n)&&(t[n]=e[n]);return t};const m={sidebar_position:3},f="RTSP",v={unversionedId:"docs/scenarios/rtsp",id:"docs/scenarios/rtsp",title:"RTSP",description:"FFmpeg Push",source:"@site/docs/docs/scenarios/rtsp.md",sourceDirName:"docs/scenarios",slug:"/docs/scenarios/rtsp",permalink:"/docs/scenarios/rtsp",draft:!1,editUrl:"https://github.com/harlanc/xiu-doc/edit/main/docs/docs/scenarios/rtsp.md",tags:[],version:"current",lastUpdatedAt:1719379301,formattedLastUpdatedAt:"Jun 26, 2024",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"docs",previous:{title:"RTMP",permalink:"/docs/scenarios/rtmp"},next:{title:"WEBRTC",permalink:"/docs/scenarios/webrtc"}},g={},b=[{value:"FFmpeg Push",id:"ffmpeg-push",level:2},{value:"Over TCP(Interleaved mode)",id:"over-tcpinterleaved-mode",level:3},{value:"Over UDP",id:"over-udp",level:3},{value:"Play",id:"play",level:2},{value:"Play Streams over TCP",id:"play-streams-over-tcp",level:3},{value:"Play Streams over UDP",id:"play-streams-over-udp",level:3}],P={toc:b},O="wrapper";function h(e){var r=e,{components:t}=r,o=y(r,["components"]);return(0,n.yg)(O,d(u(u({},P),o),{components:t,mdxType:"MDXLayout"}),(0,n.yg)("h1",u({},{id:"rtsp"}),"RTSP"),(0,n.yg)("h2",u({},{id:"ffmpeg-push"}),"FFmpeg Push"),(0,n.yg)("p",null,"RTSP protocol streaming supports both TCP and UDP modes."),(0,n.yg)("h3",u({},{id:"over-tcpinterleaved-mode"}),"Over TCP(Interleaved mode)"),(0,n.yg)("pre",null,(0,n.yg)("code",u({parentName:"pre"},{className:"language-shell"}),'ffmpeg -re -stream_loop -1  -i test.mp4 -c:v copy  -c:a copy  -rtsp_transport tcp -f rtsp "rtsp://127.0.0.1:5544/live/test?token=123"\n')),(0,n.yg)("h3",u({},{id:"over-udp"}),"Over UDP"),(0,n.yg)("pre",null,(0,n.yg)("code",u({parentName:"pre"},{className:"language-shell"}),'ffmpeg -re -stream_loop -1  -i test.mp4 -c:v copy  -c:a copy -f rtsp "rtsp://127.0.0.1:5544/live/test?token=123"\n')),(0,n.yg)("h2",u({},{id:"play"}),"Play"),(0,n.yg)("h3",u({},{id:"play-streams-over-tcp"}),"Play Streams over TCP"),(0,n.yg)("pre",null,(0,n.yg)("code",u({parentName:"pre"},{className:"language-shell"}),'ffplay -rtsp_transport tcp -i "rtsp://127.0.0.1:5544/live/test?token=123"\n')),(0,n.yg)("h3",u({},{id:"play-streams-over-udp"}),"Play Streams over UDP"),(0,n.yg)("pre",null,(0,n.yg)("code",u({parentName:"pre"},{className:"language-shell"}),'ffplay -i "rtsp://127.0.0.1:5544/live/test?token=123"\n')))}h.isMDXComponent=!0}}]);