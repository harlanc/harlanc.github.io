"use strict";(self.webpackChunktauri_docs=self.webpackChunktauri_docs||[]).push([[724],{5680:(e,t,r)=>{r.d(t,{xA:()=>s,yg:()=>m});var n=r(6540);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var c=n.createContext({}),p=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},s=function(e){var t=p(e.components);return n.createElement(c.Provider,{value:t},e.children)},u="mdxType",f={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),u=p(r),d=o,m=u["".concat(c,".").concat(d)]||u[d]||f[d]||a;return r?n.createElement(m,i(i({ref:t},s),{},{components:r})):n.createElement(m,i({ref:t},s))}));function m(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=d;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l[u]="string"==typeof e?e:o,i[1]=l;for(var p=2;p<a;p++)i[p]=r[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},6852:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>g,contentTitle:()=>y,default:()=>P,frontMatter:()=>m,metadata:()=>h,toc:()=>b});var n=r(5680),o=Object.defineProperty,a=Object.defineProperties,i=Object.getOwnPropertyDescriptors,l=Object.getOwnPropertySymbols,c=Object.prototype.hasOwnProperty,p=Object.prototype.propertyIsEnumerable,s=(e,t,r)=>t in e?o(e,t,{enumerable:!0,configurable:!0,writable:!0,value:r}):e[t]=r,u=(e,t)=>{for(var r in t||(t={}))c.call(t,r)&&s(e,r,t[r]);if(l)for(var r of l(t))p.call(t,r)&&s(e,r,t[r]);return e},f=(e,t)=>a(e,i(t)),d=(e,t)=>{var r={};for(var n in e)c.call(e,n)&&t.indexOf(n)<0&&(r[n]=e[n]);if(null!=e&&l)for(var n of l(e))t.indexOf(n)<0&&p.call(e,n)&&(r[n]=e[n]);return r};const m={sidebar_position:1},y="HTTP API",h={unversionedId:"docs/httpapi/http-api",id:"docs/httpapi/http-api",title:"HTTP API",description:"Query Stream Information",source:"@site/docs/docs/httpapi/http-api.md",sourceDirName:"docs/httpapi",slug:"/docs/httpapi/http-api",permalink:"/v0.10.0/docs/httpapi/http-api",draft:!1,editUrl:"https://github.com/harlanc/xiu-doc/edit/dev/docs/docs/httpapi/http-api.md",tags:[],version:"current",lastUpdatedAt:1708384924,formattedLastUpdatedAt:"Feb 19, 2024",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"docs",previous:{title:"Introduction",permalink:"/v0.10.0/docs/httpapi/"},next:{title:"Record",permalink:"/v0.10.0/docs/record/"}},g={},b=[{value:"Query Stream Information",id:"query-stream-information",level:2},{value:"Kickoff Client",id:"kickoff-client",level:2}],v={toc:b},O="wrapper";function P(e){var t=e,{components:r}=t,o=d(t,["components"]);return(0,n.yg)(O,f(u(u({},v),o),{components:r,mdxType:"MDXLayout"}),(0,n.yg)("h1",u({},{id:"http-api"}),"HTTP API"),(0,n.yg)("h2",u({},{id:"query-stream-information"}),"Query Stream Information"),(0,n.yg)("p",null,"Xiu has done some statistical work on the audio and video information of the stream, such as video resolution, bit rate, frame rate, etc., audio bit rate, sample rate, etc. (currently only supports the RTMP protocol). You can use the following interface for querying"),(0,n.yg)("pre",null,(0,n.yg)("code",u({parentName:"pre"},{className:"language-shell"}),"curl http://localhost:8000/get_stream_status\n")),(0,n.yg)("p",null,"The query results\uff1a"),(0,n.yg)("pre",null,(0,n.yg)("code",u({parentName:"pre"},{className:"language-json"}),'[\n    {\n        "identifier":{\n            "Rtmp":{\n                "app_name":"live",\n                "stream_name":"test"\n            }\n        },\n        "video":{\n            "codec":"H264",\n            "profile":"High",\n            "level":"3.0",\n            "width":640,\n            "height":360,\n            "bitrate(kbits/s)":485.992,\n            "frame_rate":25,\n            "gop":50\n        },\n        "audio":{\n            "sound_format":"AAC",\n            "profile":"LC",\n            "samplerate":48000,\n            "channels":2,\n            "bitrate(kbits/s)":126.184\n        }\n    }\n]\n')),(0,n.yg)("h2",u({},{id:"kickoff-client"}),"Kickoff Client"),(0,n.yg)("p",null,"The business users can kickoff illegal push/pull clients using the following interface:"),(0,n.yg)("pre",null,(0,n.yg)("code",u({parentName:"pre"},{className:"language-shell"}),'curl -X POST -H "Content-Type: application/json" -d \'{"id": "17079922471661"}\' http://localhost:8000/kick_off_client\n')))}P.isMDXComponent=!0}}]);